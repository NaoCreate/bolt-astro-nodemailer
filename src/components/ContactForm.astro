---
---

<form class="contact-form" id="contactForm">
  <div class="form-group">
    <label for="name">お名前 <span class="required">*</span></label>
    <input type="text" id="name" name="name" required>
  </div>

  <div class="form-group">
    <label for="email">メールアドレス <span class="required">*</span></label>
    <input type="email" id="email" name="email" required>
  </div>

  <div class="form-group">
    <label for="subject">件名 <span class="required">*</span></label>
    <input type="text" id="subject" name="subject" required>
  </div>

  <div class="form-group">
    <label for="message">お問い合わせ内容 <span class="required">*</span></label>
    <textarea id="message" name="message" rows="5" required></textarea>
  </div>

  <div id="formMessage" class="form-message"></div>
  <button type="submit" class="submit-button">送信する</button>
</form>

<script>
  const form = document.getElementById('contactForm') as HTMLFormElement;
  const formMessage = document.getElementById('formMessage') as HTMLDivElement;

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
    submitButton.disabled = true;
    formMessage.textContent = '送信中...';
    formMessage.className = 'form-message info';

    try {
      const formData = new FormData(form);
      const response = await fetch('/api/contact', {
        method: 'POST',
        body: formData,
      });

      const data = await response.json();

      if (response.ok) {
        formMessage.textContent = data.message;
        formMessage.className = 'form-message success';
        form.reset();
      } else {
        throw new Error(data.message || 'エラーが発生しました。');
      }
    } catch (error) {
      formMessage.textContent = error instanceof Error ? error.message : 'エラーが発生しました。';
      formMessage.className = 'form-message error';
    } finally {
      submitButton.disabled = false;
    }
  });
</script>

<style>
  .contact-form {
    max-width: 600px;
    margin: 0 auto;
  }

  .form-group {
    margin-bottom: 1.5rem;
  }

  label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
  }

  .required {
    color: #e74c3c;
  }

  input,
  textarea {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    background-color: #fff;
    color: #333;
  }

  textarea {
    resize: vertical;
  }

  .submit-button {
    background-color: rgb(var(--accent));
    color: white;
    padding: 0.75rem 2rem;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 600;
    transition: background-color 0.3s ease;
  }

  .submit-button:hover:not(:disabled) {
    background-color: rgb(var(--accent-dark));
  }

  .submit-button:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }

  .form-message {
    margin: 1rem 0;
    padding: 0.75rem;
    border-radius: 4px;
    text-align: center;
  }

  .form-message.error {
    background-color: #fee2e2;
    color: #dc2626;
  }

  .form-message.success {
    background-color: #dcfce7;
    color: #16a34a;
  }

  .form-message.info {
    background-color: #dbeafe;
    color: #2563eb;
  }
</style>