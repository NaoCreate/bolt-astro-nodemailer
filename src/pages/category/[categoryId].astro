---
import Layout from '../../layouts/Layout.astro';
import BlogCard from '../../components/BlogCard.astro';
import PageHeader from '../../components/PageHeader.astro';
import { client } from '../../utils/microcms';
import type { Blog, Category, BlogResponse } from '../../utils/microcms';

export async function getStaticPaths() {
  const { contents: categories } = await client.get<{ contents: Category[] }>({ 
    endpoint: 'categories'
  });

  return categories.map((category) => ({
    params: { categoryId: category.id },
    props: { category }
  }));
}

const { categoryId } = Astro.params;
let category;
let posts;

try {
  // カテゴリー情報を取得
  category = await client.get<Category>({
    endpoint: 'categories',
    contentId: categoryId,
  });

  // カテゴリーに属する記事を取得
  const response = await client.get<BlogResponse>({
    endpoint: 'blogs',
    queries: { filters: `category[equals]${categoryId}` }
  });

  posts = response.contents;
} catch (error) {
  return Astro.redirect('/404');
}

if (!category || !posts) {
  return Astro.redirect('/404');
}
---

<Layout title={category ? `ブログ - ${category.name}` : 'ブログ'}>
  <main>
    <PageHeader 
      title="ブログ"
      description={category ? `「${category.name}」に関する記事一覧` : '記事一覧'}
    />
    
    <div class="blog-grid">
      {posts.length > 0 ? (
        posts.map((post) => (
          <BlogCard
            title={post.title}
            publishedAt={post.publishedAt}
            id={post.id}
            category={post.category}
            eyecatch={post.eyecatch}
          />
        ))
      ) : (
        <p class="no-posts">このカテゴリーの記事はまだありません。</p>
      )}
    </div>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 1200px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }

  .blog-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }

  .no-posts {
    grid-column: 1 / -1;
    text-align: center;
    color: #888;
    font-size: 1.1rem;
    padding: 2rem;
  }
</style>